{"version":3,"file":"main.145da058.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/components/styles.scss","webpack:///./src/common.scss","webpack:///./src/constants.js","webpack:///./src/helpers/state_helper.js","webpack:///./src/redux/app_actions.js","webpack:///./src/redux/configure_store.js","webpack:///./src/redux/index.js","webpack:///./src/components/Cell.js","webpack:///./src/components/index.js","webpack:///./src/index.js"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/diamond-sweeper/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([46,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles-container_3xSNk\",\"message\":\"styles-message_3cdBs\",\"ready\":\"styles-ready_2q3Ja\",\"playing\":\"styles-playing_2b_gK\",\"finished\":\"styles-finished_3X2sX\",\"gridContainer\":\"styles-gridContainer_1Hkbr\",\"gridItem\":\"styles-gridItem_3WanR\",\"cell\":\"styles-cell_-GxSq\",\"diamond\":\"styles-diamond_39Q1V\",\"arrow\":\"styles-arrow_1m3g_\",\"left\":\"styles-left_21cri\",\"unknown\":\"styles-unknown_3pJB1\"};","// extracted by mini-css-extract-plugin","export const GRID_SIZE = 8\n\nexport const APP_STATUS = {\n  READY: 'Ready',\n  PLAYING: 'Playing',\n  GAME_OVER: 'Game Over'\n}\n\nexport const GAME_STATUS_CLASS = {\n  Ready: 'ready',\n  Playing: 'playing',\n  'Game Over': 'finished'\n}\n\nexport const CELL_STATUS = {\n  CLOSED: 'closed',\n  OPEN: 'open'\n}\n","import { CELL_STATUS, APP_STATUS, GRID_SIZE } from '../constants'\n\nexport const getStartApp = (row, col) => {\n  const retData = []\n  for (let i = 0; i < row; i++) {\n    retData[i] = []\n    const diamondAt = Math.floor(Math.random() * 8)\n    for (let j = 0; j < col; j++) {\n      retData[i][j] = { status: CELL_STATUS.CLOSED, diamond: diamondAt === j }\n    }\n  }\n  return retData\n}\n\nexport const getNewStatus = (cellData) => {\n  const diamondsRemaining = cellData.reduce((curr, next) => curr + next.filter(item => item.diamond && item.status === CELL_STATUS.CLOSED).length, 0)\n  const openedCell = cellData.reduce((curr, next) => curr + next.filter(item => item.status === CELL_STATUS.OPEN).length, 0)\n  return {\n    status: (diamondsRemaining > 0) ? APP_STATUS.PLAYING : APP_STATUS.GAME_OVER,\n    score: (GRID_SIZE * GRID_SIZE) - openedCell\n  }\n}\n\nexport const getHint = (cellData, row, col) => {\n  const clicked = cellData[row][col]\n  if (clicked.diamond) return { row: -1, col: -1, direction: '' }\n  const returnObj = { row, col, direction: 'right' }\n  const rowDiamondIndex = cellData[row].findIndex(item => item.diamond)\n  if (rowDiamondIndex < col)returnObj.direction = 'left'\n  return returnObj\n}\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { CELL_STATUS, GRID_SIZE, APP_STATUS } from '../constants'\nimport { getStartApp, getNewStatus, getHint } from '../helpers'\n\nconst defaultState = {\n  cellData: getStartApp(GRID_SIZE, GRID_SIZE),\n  status: APP_STATUS.READY,\n  hint: { row: -1, col: -1, direction: '' },\n  score: GRID_SIZE * GRID_SIZE\n}\n\nconst { onCellClick } = createActions({\n  ON_CELL_CLICK: (row, col) => ({ row, col })\n}, { prefix: 'APP' })\n\nexport const AppAction = { onCellClick }\n\nexport default handleActions({\n  [combineActions(onCellClick)]: (state, { type, payload }) => {\n    if (type === 'APP/ON_CELL_CLICK') {\n      const { row, col } = payload\n      const { cellData } = state\n      const newData = JSON.parse(JSON.stringify(cellData))\n      newData[row][col].status = CELL_STATUS.OPEN\n      const { status, score } = getNewStatus(newData)\n      const hint = getHint(newData, row, col)\n      return { cellData: newData, status, score, hint }\n    }\n    return state\n  }\n}, defaultState)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise'\n\nimport appState from './app_actions'\n\nconst rootReducer = combineReducers({\n  appState\n})\nlet middleware = ''\nif (process.env.NODE_ENV === 'production') {\n  middleware = applyMiddleware(promiseMiddleware, thunk)\n} else {\n  middleware = applyMiddleware(promiseMiddleware, thunk, createLogger())\n}\nexport const store = createStore(rootReducer, {}, middleware)\n","export * from './configure_store'\nexport * from './app_actions'\n","import React from 'react'\nimport styles from './styles.scss'\nimport { CELL_STATUS } from '../constants'\nimport { connect } from 'react-redux'\nimport { AppAction } from '../redux'\n\nfunction Cell ({ status, diamond, hint, row, col, isClickable, onCellClick }) {\n  const isClosed = status === CELL_STATUS.CLOSED\n  const statusClass = isClosed ? styles.unknown : ''\n  const diamondClass = diamond ? styles.diamond : ''\n  const hintClass = hint.row === row && hint.col === col ? `${styles.arrow} ${styles[hint.direction]}` : ''\n  const handleCellClick = (row, col) => isClickable && isClosed && onCellClick(row, col)\n  return (\n    <figure onClick={_ => handleCellClick(row, col)} className={`${styles.gridItem} ${styles.cell} ${statusClass} ${diamondClass} ${hintClass}`} />\n  )\n}\n\nconst mapDispatchToProps = { onCellClick: AppAction.onCellClick }\n\nexport default connect(null, mapDispatchToProps)(Cell)\n","import React from 'react'\nimport Cell from './Cell'\nimport styles from './styles.scss'\nimport { connect } from 'react-redux'\nimport { APP_STATUS, GAME_STATUS_CLASS } from '../constants'\n\nfunction App ({ cellData, score, hint, status }) {\n  const isGameOver = status === APP_STATUS.GAME_OVER\n  const gameStatusClass = styles[GAME_STATUS_CLASS[status]]\n  return (\n    <div className={styles.container}>\n      <div className={`${styles.message} ${gameStatusClass}`}>{isGameOver ? 'Final' : 'Your'} Score: {score}</div>\n      <main className={styles.gridContainer}>\n        {cellData.map((row, ri) => row.map((cell, ci) => (\n          <Cell\n            key={`cell_${ri}_${ci}`}\n            {...cell}\n            hint={hint}\n            col={ci}\n            row={ri}\n            isClickable={!isGameOver}\n          />\n        )))}\n      </main>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ appState }) => ({ ...appState })\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { store } from './redux'\nimport App from './components'\nimport './common.scss'\n\nconst renderDom = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(renderDom, document.getElementById('root'))\n"],"mappingsvJA;AACA;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;;ACdA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAFA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;AC7BA;AACA;AACA;AACA;AAEA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA,SAEA;AACA;AAAA;;AChBA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AADA;AAGA;AACA;AACA;AACA;AANA;AADA;AAAA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAKA;;;;A","sourceRoot":""}